<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>RED - Rapid Education Development</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <link href="styles.css" rel="stylesheet" type="text/css">
  </head>

  <body>
    
    <div class="container">
    <div id="username" style="display:none"><%= username %></div>

      <div class="header">
        <div class="title">
          <h2>RAPID</h2>
          <h2>EDUCATION</h2>
          <h2>DEVELOPMENT</h2>
        </div>
        <div class="nav">
          <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/results">Results</a></li>
            <li>
              <form action="/logout?_method=DELETE" method="POST">
                <button type="submit">Log Out</button>
              </form>
            </li>
          </ul>
        </div>
      </div>

      <div class="main tiles-container">
        <h1>Click on what you would like to see more of from the teacher</h1>
        <div id="tiles-wrapper">
          <button id="explane">explain</button>
          <button id="question">question</button>
          <button id="goback">go back</button>
          <button id="louder">louder</button>
          <button id="slower">slower</button>
          <button id="faster">faster</button>
          <button id="clearer">clearer</button>
          <button id="breaktime">break</button>
          
          
        </div>
      </div>

      <div class="bottom" id="plotdiv"></div>

    </div>

    <script>

      let votes = {};
      const wrapper = document.getElementById("tiles-wrapper");
      const username = document.getElementById('username').textContent;
      const connection = new WebSocket("wss://a31vmdscn7.execute-api.us-east-1.amazonaws.com/dev");

      connection.onopen = (event) => {
        console.log("connected!");
        getUserData();
      };

      connection.onerror = (error) => {
        console.log("ERROR");
        console.log(error);
      };

      connection.onmessage = (response) => {
        let thisRes = JSON.parse(response.data);

        if(thisRes.name == "getUserData") {
          votes = thisRes.data;
          plotData(votes)
        }


      };

      wrapper.addEventListener("click", (event) => {
        const isButton = event.target.nodeName === "BUTTON";
        if (!isButton) {
          return;
        } else {
          const choice = event.target.id;
          votes[choice] += 1;
          event.preventDefault();
        }
        plotData(votes)
        storeVotes()
      });

      function plotData(data) {
        const plotDiv = document.getElementById('plotdiv');
        let myData = data
        delete myData.password
        delete myData.username

        let xData = []
        for (let propety in myData) {
          if(propety == "explane"){
            propety = "explain"
          }
          if(propety == "breaktime"){
            propety = "break"
          }
          if(propety == "goback"){
            propety = "go back"
          }
          propety = propety.toUpperCase()

          xData.push(propety)
        }

        let yData = []
        for (let propety in myData) {
          yData.push(myData[propety])
        }

        let data1 = [{
          x: xData,
          y: yData,
          type: 'bar'
        }];

        Plotly.newPlot(plotDiv, data1);
      }

      function storeVotes() {

        let msg = {
          username: username,
          votes: votes
        }

        let dataObj = {
          action: "storeVotes",
          data: msg
        }

        connection.send(JSON.stringify(dataObj));

        console.log('message sent');
      }

      function getUserData() {

        let msg = {
          username: username
        }

        let dataObj = {
          action: "getUserVotes",
          data: msg
        }

        connection.send(JSON.stringify(dataObj))
      }

      // setInterval(() => {
      //   storeVotes()
      // }, 10000);

    </script>
  </body>
</html>
